# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  # build:
  #   strategy:
  #     matrix:
  #       include:
  #       - arch    : amd64
  #         mode    : build-and-test
  #       - arch    : arm64
  #         variant : v8
  #         mode    : build-only
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         os: [ ubuntu-latest, windows-latest, macOS-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: npm run app

      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file dockerfile --tag record:latest

      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker network create rec

      - uses: actions/checkout@v3
      - name: run container
        #run: docker run -it --rm --name my-running-app rec2
        #run: docker run --publish 5000:5000 record:latest
        #run: docker run --name record --restart=on-failure --detach --network rec --env DOCKER_HOST=tcp://docker:2376 --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1 --volume rec-data:/var/rec --volume jenkins-docker-certs:/certs/client:ro --publish 8080:8080 --publish 50000:50000 record:latest
        #run: docker run  --rm --name my-running-script record:latest ./app/prediction.py
        run: docker run --rm --name my-running-script --detach --device /dev/snd:/dev/snd -v "$PWD":/usr/src/app -w /usr/src/app record:latest python ./app/prediction.py

